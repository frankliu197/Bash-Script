#!/bin/bash
#LC_ALL="ja_JP.UTF-8" wine 

shopt -s direxpand
shopt -s expand_aliases
#app alias
alias calculator=qalculate
alias calendar=io.elementary.calendar
alias code=io.elementary.code
alias files=io.elementary.files
alias music=io.elementary.music
alias photos=io.elementary.photos
alias videos=io.elementary.videos
alias mail=pantheon.mail

#simple CD commands
shopt -s cdable_vars
export MEDIA=/media/frankliu197
export SDA1=$MEDIA/sda1
export SDA2=$MEDIA/sda2
export DOWNLOADS=$HOME/Downloads
export DOCUMENTS=$HOME/Documents
export PROGRAMMING=$HOME/Programming
export BASHSCRIPTS=$HOME/Programming/bash-scripts
export PPA=/etc/apt/sources.list.d
export GAMES=$HOME/Games
export WINEENV=$GAMES/wineenv
export XKB=/usr/share/X11/xkb

# PKILL (args) [starting]
# PKILL used to kill all processes that match your given match string in ps aux
# args are the same as kill
PKILL () {
  ps aux | grep -i ${@:$#} | awk '{print $2}' |  xargs sudo kill ${@:1:$#-1} &> /dev/null
}

# Excecute this method using one of the aliases MOUNT/UMOUNT partition
# (MOUNT/UMOUNT) partition
# - Will mount/umount the given disk to MEDIA/partition with read write permissions 
# - Create/delete a cd_able var called PARTITION (the original partition name with CAPS), which links to the mount location (MEDIA/partition)
# Because a partition can also just be the disk itself, a partition is refered to a disk in this tutorial
# You are allowed to reference the disk name using the diskname, disk's name along with /dev, 
# and the disk's last letter (do not forget the partition number if you have one)
#   e.g. /dev/sda1 can also be referenced as a1 or sda1) and the cd_able var is SDA1
# In the case of where there are an ambiguity between two different disks, e.g. (if you have a disk sdp and nvme0n1p), 
# the function will choose the default disk. That is the disk that comes preinstalled with windows (Change this value
# if nescessary)
#
# Your window's partition can also be referenced with w and window(s)
mount_disk () {
  defaultdisk=nvme0n1p #your default disk
  # to lower case and rid of trailing /
  p=$(echo "$2" | awk '{print tolower($0)}')
  if [[ ${p: -1} == / ]]; then p=${p:0:-1}; fi

  # determine the partition
  if [[ $p =~ ^w[indow[s]?]?$ ]]; then d=${defaultdisk}3
  elif [[ $p =~ ^${defaultdisk: -1}[0-9]?$ ]]; then d=${defaultdisk:0:-1}$p 
  elif [[ $p =~ ^$defaultdisk[0-9]?$ ]]; then d=$p
  elif [[ $p =~ ^[a-z][0-9]?$ ]]; then d=sd$p
  elif [[ $p =~ ^sd[a-z][0-9]?$ ]]; then d=$p
  elif [[ $p =~ ^/dev/[a-z]+[0-9]?$ ]]; then d=${p:5}; fi

  if [[ -z $d ]]; then
    echo Error no disk matching $p
    return 1
  fi
  disk=/dev/$d
  
  # first umount the drive if mounted
  rmloc=$(mount | grep $disk | awk '{print $3}')
  if [[ $rmloc ]]; then 
    umountmessage=$(sudo umount $disk)
    sudo rmdir $rmloc &> /dev/null

    if [[ $? ]]; then dirmessage=" and removed $rmloc"; fi
  fi

  #if command is umount, output message and return
  if [[ $1 == umount ]]; then
    if [[ -z $rmloc ]]; then                          #disk not mounted in the first place
      echo $umountmessage $disk not mounted
      return 0
    elif ! ( mount | grep $disk &> /dev/null ); then        #disk has been umounted 
      unset $(echo $d | awk '{print toupper($0)}')    #unset previously set cdable_var
      echo $umountmessage Successfully umounted $disk $dirmessage
      return 0
    else                                              #Error occured 
      echo $umountmessage Failed to umount $disk
      return 1
    fi
  fi 


  #Create a folder for mounting
  loc=$MEDIA/$d
  sudo mkdir $loc &> /dev/null

  #MOUNT drive according to type
  if [[ $(lsblk -f | grep -i $d | awk '{print $2}') =~ ext[2-4] ]]; then
    sudo mount $disk $loc 
    state=$?
    sudo chown $USER:$USER $loc
    sudo chmod 775 $loc
  else
    sudo mount $disk $loc -o uid=$USER -o gid=$USER
    state=$?
  fi

  if [[ $state ]]; then
    export $(echo $d | awk '{print toupper($0)}')=$loc      #set a cdable_var
    echo Successfully mount $disk at $loc
  else
    echo Failed to mount $disk
  fi
  return $state
}

#command alias
alias source="source ~/.bashrc"
alias UMOUNT="mount_disk umount $1"
alias MOUNT="mount_disk mount $1"

